# .gitlab-ci/templates/render-docker-service.yml

.render_docker_service:
  image: python:3.10
  before_script:
    - pip install --user --quiet jinja-cli[yaml]
    - export PATH="$PATH:$HOME/.local/bin"
    - export SERVICE_DIR="$SERVICE_CATEGORY/$SERVICE_NAME"
    - export TEMPLATE_DIR="$SERVICE_DIR/templates"
    - export VARS_FILE="$TEMPLATE_DIR/vars.yml"
    - export COMPOSE_DIR="$SERVICE_DIR/compose"
  script:
    - mkdir -p "$COMPOSE_DIR"
    - jinja -d "$VARS_FILE" -f yaml \
        -D "INTERNAL_NETWORK" "${SERVICE_NAME}_internal" \
        -D "USE_TRAEFIK" "true" \
        -D "SERVICE_NAME" "$SERVICE_NAME" \
        -o "$COMPOSE_DIR/docker-compose.yml" "$TEMPLATE_DIR/docker-compose.yml.j2"
    - jinja -d "$VARS_FILE" -f yaml \
        -D "INTERNAL_NETWORK" "${SERVICE_NAME}_internal" \
        -D "USE_TRAEFIK" "true" \
        -D "SERVICE_NAME" "$SERVICE_NAME" \
        -o "$COMPOSE_DIR/stack.env" "$TEMPLATE_DIR/stack.env.j2"
  artifacts:
    paths:
      - "${SERVICE_DIR}/compose/"
    expire_in: 1h
