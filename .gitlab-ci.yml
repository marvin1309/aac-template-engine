# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/#customization
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

stages:
- build

build-pipeline-image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  tags:
    # This job requires Docker-in-Docker, so it must run on a privileged runner.
    - docker

  variables:
    # This tells the Docker client how to connect to the dind service securely.
    # It can help prevent connection issues.
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    # Use --password-stdin for a more secure login, preventing the password from appearing in logs or process lists.
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    
  script:
    - docker build -t "$CI_REGISTRY_IMAGE/pipeline-tools:latest" .
    - docker push "$CI_REGISTRY_IMAGE/pipeline-tools:latest"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - Dockerfile
        - requirements.txt
        - scripts/**/*