# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# ... (other comments)

stages:
  - test

.test-template:
  stage: test
  image: python:3.9-slim
  before_script:
    - pip install PyYAML Jinja2
  # The script creates the 'deployments' directory inside the test folder, which we clean up.
  after_script:
    - rm -rf tests/service-test/deployments
  tags:
    - docker

# The 'validate-schema' job has been removed as it was misconfigured
# and the required 'service-schema.yml' file does not exist.

test-docker-compose-generation:
  extends: .test-template
  script:
    - |
      echo "üß™ Testing docker-compose generation..."
      
      # Navigate into the test service directory
      cd tests/service-test
      
      echo "üìÑ Displaying raw content of service.yml for verification:"
      cat service.yml
      echo "---"

      echo "‚öôÔ∏è Converting to JSON and running manifest generator..."
      BOOKSTACK_SERVICE_JSON="$(python -c 'import sys, yaml, json; print(json.dumps(yaml.safe_load(sys.stdin)))' < service.yml)"
      python ../../scripts/generate_manifest.py --ssot-json "$BOOKSTACK_SERVICE_JSON" --template-path ../.. --deployment-type docker_compose
      
      echo "üîé Verifying that generated files exist..."
      test -f deployments/docker_compose/docker-compose.yml || (echo "docker-compose.yml not found!" && exit 1)
      test -f deployments/docker_compose/.env || (echo ".env file not found!" && exit 1)
      test -f deployments/docker_compose/stack.env || (echo "stack.env file not found!" && exit 1)
      
      # --- FINAL DEBUG STEP: DISPLAY GENERATED FILES ---
      echo "--- Content of generated docker-compose.yml ---"
      cat deployments/docker_compose/docker-compose.yml
      echo "--- End of docker-compose.yml ---"
      
      echo "--- Content of generated .env ---"
      cat deployments/docker_compose/.env
      echo "--- End of .env ---"
      
      echo "--- Content of generated stack.env ---"
      cat deployments/docker_compose/stack.env
      echo "--- End of stack.env ---"
      # --- END OF DEBUG STEP ---
      
      echo "üîé Verifying content of generated files..."
      grep -q 'image: lscr.io/linuxserver/bookstack' deployments/docker_compose/docker-compose.yml
      grep -q 'DB_DATABASE: "bookstack"' deployments/docker_compose/.env
      grep -q 'DB_PASSWORD=' deployments/docker_compose/stack.env
      
      echo "‚úÖ BookStack Docker Compose generation test passed."
  tags:
    - docker